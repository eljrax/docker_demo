# Thanks: https://github.com/fupelaqu/ansible-docker-registry/
#
####### Docker registry on swarm_manager #########

  - name: add nginx repo for Ubuntu
    apt_repository: repo=ppa:nginx/stable update_cache=yes state=present

  - stat: path=/var/lib/docker-registry
    register: docker_registry_storage

  - name: Prepare Docker Registry Storage
    file:
      path: /var/lib/docker-registry
      state: directory
      mode: 750
    when: not docker_registry_storage.stat.exists 

  - name: ensure Docker Registry is running
    docker:
      image: "registry:2"
      memory_limit: 256MB
      name: "registry"
      ports:
        - "127.0.0.1:5000:5000"
      env:
        REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /registry
      volumes:
        - /var/lib/docker-registry:/registry:rw
      privileged: yes
      state: reloaded
      pull: "missing"
      restart_policy: always
    register: start_registry
    
  - name: Secure Docker Registry with Nginx for Debian
    apt:
      name: "{{item}}"
      state: latest
      update_cache: yes
    with_items:
      - nginx
      - python-passlib
      - openssl

  - file: path=/etc/nginx/certs state=directory
 
  - name: stat docker-registry certificate file
    stat: path=/etc/nginx/certs/{{docker_registry_host}}.crt
    register: docker_registry_cert_stat

  - local_action: file path=./ssl state=directory
    sudo: no  

  - local_action: stat path=ssl/{{docker_registry_host}}.crt
    register: local_certificate
    sudo: no

  - name: Remove default nginx vhost, freeing up port 80
    file: path=/etc/nginx/sites-enabled/default state=absent

  - name: create server key and certificate
    local_action: shell /bin/bash --login -c 'openssl req -new -nodes -x509 -subj "/C=/ST=/L=/O=/CN={{docker_registry_host}}/subjectAltName=IP:{{ hostvars[inventory_hostname]['ansible_' + cloud_network_iface]['ipv4']['address'] }}" -days 3650 -keyout ./ssl/{{docker_registry_host}}.key -out ./ssl/{{docker_registry_host}}.crt -extensions v3_ca'
    sudo: no
    when: not local_certificate.stat.exists

  - copy: src=./ssl/{{item}} dest=/etc/nginx/certs/
    with_items:
      - "{{docker_registry_host}}.key"
      - "{{docker_registry_host}}.crt"

  - copy: src=./ssl/{{docker_registry_host}}.crt dest=/usr/local/share/ca-certificates/{{docker_registry_host}}.crt

  - file: path=/etc/docker/certs.d/{{docker_registry_host}}:{{docker_registry_port}} state=directory

  - copy: src=./ssl/{{docker_registry_host}}.crt dest=/etc/docker/certs.d/{{docker_registry_host}}:{{docker_registry_port}}/ca.crt

  - name: Restart docker
    service: name=docker state=restarted

  - name: Create htpasswd
    htpasswd: path=/etc/nginx/conf.d/registry.htpasswd name={{item.name}} password={{item.password}} owner=root group=root mode=0644
    with_items: docker_registry_users
    register: docker_registry_auth
    when: docker_registry_users is defined

  - template: src=templates/docker-registry.j2 dest=/etc/nginx/conf.d/docker-registry.conf owner=root group=root mode=0644
    register: docker_registry_vhost

  - service: name=nginx state=restarted
    when: docker_registry_vhost.changed or docker_registry_auth.changed or not docker_registry_cert_stat.stat.exists
